【问题描述】
请定义一个Point类，将前置++和后置++运算符重载为成员函数，实现成员变量m_x和m_y的加一操作。
同时重载流插入运算符，实现对Point类对象的格式化输出。例如
Point p；
cout<<p;
输出结果为：
（0,0）

请根据给定的main函数，设计Point类。

【样例输出】
(1,3)
(1,3)
(3,5)


#include  <iostream>
using  namespace  std;
class Point
{
	public:
		Point(int Nm_x,int Nm_y);
		Point&operator ++();前置
		Point operator ++(int);后置
		friend ostream& operator<<(ostream&,const Point &);
		int Getx ()const;
		int Gety ()const;
	private:
		int m_x,m_y;
};
int Point::Getx()const {return this->m_x;}
int Point::Gety()const {return this->m_y;}
Point::Point(int Nm_x,int Nm_y)
{
	m_x=Nm_x;
	m_y=Nm_y;
}
Point&Point::operator ++()
{
	m_x++;
	m_y++;
	return *this;
}
Point Point::operator ++(int)
{
	Point a(*this);
	++(*this);
	return a;
}
ostream& operator<<(ostream &output,const Point &c)   
{
 output<<"("<<c.Getx()<<","<<c.Gety()<<")"<<endl;  
 return output;
}
int  main() 
{ 
        Point  a(1,3); 
        cout<<a; 
        cout<<a++; 
        cout<<++a; 
        return  0; 
}
