【问题描述】
请定义一个复数类，将+/-运算符重载为友元函数，实现复数与复数的加减及复数与浮点数的加减。
请根据给定的main函数，设计Complex类。

【样例输出】
a+b=(4)+(3i)
a-b=(2)+(5i)
a+100=(103)+(4i)
a-2.5=(0.5)+(4i)
100+a=(103)+(4i)
2.5-a=(-0.5)+(-4i)

#include  <iostream>
using  namespace  std;
class Complex
{
	public:
		Complex(double r,double i);
		friend Complex operator+(Complex c1,Complex c2);
		friend Complex operator-(Complex c1,Complex c2);
		friend Complex operator+(Complex c1,double x);
		friend Complex operator-(Complex c1,double x);
		friend Complex operator+(double x,Complex c2);
		friend Complex operator-(double x,Complex c2);
		void print();
	private:
		double real,imag;
}; 

Complex::Complex(double r=0.0,double i=0.0)
{
	real=r;
	imag=i;
}

Complex operator+(Complex c1,Complex c2)
{
	Complex c;
	c.real=c1.real+c2.real;
	c.imag=c1.imag+c2.imag;
	return Complex(c.real,c.imag);
}

Complex operator-(Complex c1,Complex c2)
{
	Complex c;
	c.real=c1.real-c2.real;
	c.imag=c1.imag-c2.imag;
	return Complex(c.real,c.imag);
}

Complex operator+(Complex c1,double x)
{
	Complex c;
	c.real=c1.real+x;
	c.imag=c1.imag;
	return Complex(c.real,c.imag);
}

Complex operator-(Complex c1,double x)
{
	Complex c;
	c.real=c1.real-x;
	c.imag=c1.imag;
	return Complex(c.real,c.imag);
}

Complex operator+(double x,Complex c2)
{
	Complex c;
	c.real=x+c2.real;
	c.imag=c2.imag;
	return Complex(c.real,c.imag);
}

Complex operator-(double x,Complex c2)
{
	Complex c;
	c.real=x-c2.real;
	c.imag=-c2.imag;
	return Complex(c.real,c.imag);
}
void Complex::print()
{
	cout<<"("<<real<<")"<<"+"<<"("<<imag<<"i"<<")"<<endl;
}
int  main() 
{ 
        Complex  a(3,4),b(1,-1),c; 
        c=a+b; 
        cout<<"a+b="; 
        c.print(); 
        cout<<endl; 
        c=a-b; 
        cout<<"a-b="; 
        c.print(); 
        cout<<endl; 
        c=a+100; 
        cout<<"a+100="; 
        c.print(); 
        cout<<endl; 
        c=a-2.5; 
        cout<<"a-2.5="; 
        c.print(); 
        cout<<endl; 
        c=100+a; 
        cout<<"100+a="; 
        c.print(); 
        cout<<endl; 
        c=2.5-a; 
        cout<<"2.5-a="; 
        c.print(); 
        cout<<endl; 
        return  0; 
}
