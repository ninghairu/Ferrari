【问题描述】
编写一个Shape类并派生出Circle类和Rectangle类，观察运行机制。
shape类有以下成员
1）私有成员m_ID
2）公有getter和setter
3）计算面积函数getArea()，返回0;
4）构造与析构函数
Circle类从shape类继承，并派生以下成员
1）私有成员r
2）公有getter和setter
3）计算面积函数getArea()，返回计算面积;
4）构造与析构函数
Rectangle类从shape类继承，并派生以下成员
1）私有成员h,w
2）公有getter和setter
3）计算面积函数getArea()，返回计算面积;
4）构造与析构函数

【样例输出】
Shape constructor called:1
Shape constructor called:2
Circle constructor called:2
Shape constructor called:3
Rectangle constructor called:3
Shape的面积0
Circle的面积50.2654
Rectangle的面积20
Rectangle destructor called:3
Shape destructor called:3
Circle destructor called:2
Shape destructor called:2
Shape destructor called:1


#include  <iostream> 
using  namespace  std; 
const  float  pi=3.14159;
class Shape
{
	public:
		Shape(int i);
		~Shape();
		int getArea();
		int getm_ID();
	private:
		int m_ID;
};
Shape::Shape(int i)
{
	m_ID=i;
	cout<<"Shape constructor called:"<<m_ID<<endl;
}
Shape::~Shape()
{
	cout<<"Shape destructor called:"<<m_ID<<endl;
}
int Shape::getArea()
{
	return 0;
}
int Shape::getm_ID()
{
	return m_ID;
}

class Circle:public Shape
{
	public:
		Circle(int r1,int ID);
		~Circle();
		double getArea();
		double getr();
	private:
		int r;	
};
Circle::Circle(int r1,int ID):
Shape(ID)
{
	r=r1;
	cout<<"Circle constructor called:"<<Shape::getm_ID()<<endl;
}
Circle::~Circle()
{
	cout<<"Circle destructor called:"<<Shape::getm_ID()<<endl;
}
double Circle::getArea()
{
	return pi*r*r;
}
double Circle::getr()
{
	return r;
}

class Rectangle:public Shape
{
	public:
		Rectangle(int L,int W,int ID);
		~Rectangle();
		int getArea();
		int geth();
		int getw();
	private:
		int h,w;
};
Rectangle::Rectangle(int L,int W,int ID):
Shape(ID)
{
	h=L;w=W;
	cout<<"Rectangle constructor called:"<<Shape::getm_ID()<<endl;
}
Rectangle::~Rectangle()
{
	cout<<"Rectangle destructor called:"<<Shape::getm_ID()<<endl;
}
int Rectangle::getArea()
{
	return h*w;
}
int Rectangle::geth()
{
	return h;
}
int Rectangle::getw()
{
	return w;
}
int  main() 
{ 
        Shape  s(1);//1表示ID 
        Circle  c(4,2);//4表示半径，2表示ID 
        Rectangle  r(4,  5,3);//4和5表示长和宽，3表示ID 
        cout<<"Shape的面积"<<s.getArea()<<endl; 
        cout<<"Circle的面积"<<c.getArea()<<endl; 
        cout<<"Rectangle的面积"<<r.getArea()<<endl; 
}
